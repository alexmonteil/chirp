services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    volumes:
      - ./server:/app/server
      - ./packages:/app/packages
      - /app/node_modules
      - /app/server/node_modules
      - /app/packages/node_modules
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      HASH_SALT_ROUNDS: ${HASH_SALT_ROUNDS}
      GOOGLE_ACCOUNT: ${GOOGLE_ACCOUNT}
      GOOGLE_APP_PASSWORD: ${GOOGLE_APP_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    command: npm run dev --workspace=server
    depends_on:
      - db

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    volumes:
      - ./client:/app/client
      - ./packages:/app/packages
      - /app/node_modules
      - /app/client/node_modules
      - /app/packages/node_modules
    ports:
      - "5173:5173"
    command: npm run dev --workspace=client -- --host
    depends_on:
      - server

  migrate:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - db
    command: "true"

volumes:
  db-data:
